# baseURI: http://example.org/atBooks
# imports: http://datashapes.org/dash
# prefix: atBooks

@prefix atBooks: <http://example.org/atBooks#> .
@prefix dash: <http://datashapes.org/dash#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://example.org/atBooks>
  a owl:Ontology ;
  owl:imports <http://datashapes.org/dash> ;
  owl:versionInfo "Created with TopBraid Composer" ;
.
atBooks:Author
  a rdfs:Class ;
  a sh:NodeShape ;
  rdfs:label "Author" ;
  rdfs:subClassOf atBooks:Person ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:authorRating ;
      sh:datatype xsd:integer ;
      sh:maxCount 1 ;
      sh:name "author rating" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:authorRewards ;
      sh:datatype xsd:integer ;
      sh:maxCount 1 ;
      sh:name "author rewards" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:hasWritten ;
      sh:class atBooks:TextConcept ;
      sh:name "has written" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:hasWrittenCycles ;
      sh:class atBooks:BookCycles ;
      sh:name "has written cycles" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:haveWrittenBooks ;
      sh:class atBooks:Book ;
      sh:name "have written books" ;
      sh:nodeKind sh:IRI ;
    ] ;
.
atBooks:Book
  a rdfs:Class ;
  a sh:NodeShape ;
  rdfs:label "Book" ;
  rdfs:subClassOf atBooks:TextConcept ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:addedToLibrary ;
      sh:datatype xsd:integer ;
      sh:description "		" ;
      sh:maxCount 1 ;
      sh:name "added to library" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:bookCharacters ;
      sh:datatype xsd:integer ;
      sh:maxCount 1 ;
      sh:name "book characters" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:hasComments ;
      sh:datatype xsd:string ;
      sh:name "has comments" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:hasCost ;
      sh:datatype xsd:integer ;
      sh:maxCount 1 ;
      sh:name "has cost" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:hasCycles ;
      sh:class atBooks:BookCycles ;
      sh:maxCount 1 ;
      sh:name "has cycles" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:hasGenre ;
      sh:class atBooks:Genre ;
      sh:name "has genre" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:hasLikes ;
      sh:datatype xsd:integer ;
      sh:maxCount 1 ;
      sh:name "has likes" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:hasRewards ;
      sh:datatype xsd:integer ;
      sh:maxCount 1 ;
      sh:name "has rewards" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:hasTags ;
      sh:class atBooks:Tags ;
      sh:name "has tags" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:hasViews ;
      sh:datatype xsd:integer ;
      sh:maxCount 1 ;
      sh:name "has views" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:numberInCycle ;
      sh:datatype xsd:integer ;
      sh:maxCount 1 ;
      sh:name "number in cycle" ;
    ] ;
.
atBooks:Book1
  a atBooks:Book ;
  rdfs:label "Book1" ;
.
atBooks:BookConcept
  a rdfs:Class ;
  a sh:NodeShape ;
  rdfs:label "Book concept" ;
  rdfs:subClassOf rdfs:Resource ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:hasName ;
      sh:datatype xsd:string ;
      sh:description "Name of Book Concept" ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "has name" ;
    ] ;
.
atBooks:BookCycles
  a rdfs:Class ;
  a sh:NodeShape ;
  rdfs:label "Book cycles" ;
  rdfs:subClassOf atBooks:TextConcept ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:cycleDescription ;
      sh:datatype xsd:string ;
      sh:maxCount 1 ;
      sh:name "cycle description" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:hasBooksInCycle ;
      sh:class atBooks:Book ;
      sh:name "has books in cycle" ;
      sh:nodeKind sh:IRI ;
    ] ;
.
atBooks:Genre
  a rdfs:Class ;
  a sh:NodeShape ;
  rdfs:label "Genre" ;
  rdfs:subClassOf atBooks:GenreConcept ;
.
atBooks:Genre1
  a atBooks:Genre ;
  atBooks:hasName "\"Humour" ;
  rdfs:label "Genre1" ;
.
atBooks:GenreConcept
  a rdfs:Class ;
  a sh:NodeShape ;
  rdfs:label "Genre concept" ;
  rdfs:subClassOf atBooks:BookConcept ;
.
atBooks:PeopleConcept
  a rdfs:Class ;
  a sh:NodeShape ;
  rdfs:label "People concept" ;
  rdfs:subClassOf atBooks:BookConcept ;
.
atBooks:Person
  a rdfs:Class ;
  a sh:NodeShape ;
  rdfs:label "Person" ;
  rdfs:subClassOf atBooks:PeopleConcept ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:hasReadedBooks ;
      sh:class atBooks:Book ;
      sh:name "has readed books" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:personReputation ;
      sh:datatype xsd:integer ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "person reputation" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:registrationDate ;
      sh:datatype xsd:dateTime ;
      sh:maxCount 1 ;
      sh:name "registration date" ;
    ] ;
.
atBooks:Tags
  a rdfs:Class ;
  a sh:NodeShape ;
  rdfs:label "Tags" ;
  rdfs:subClassOf atBooks:GenreConcept ;
.
atBooks:Tags1
  a atBooks:Tags ;
  atBooks:hasName "RPG" ;
  rdfs:label "Tags1" ;
.
atBooks:TextConcept
  a rdfs:Class ;
  a sh:NodeShape ;
  rdfs:label "Text concept" ;
  rdfs:subClassOf atBooks:BookConcept ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:firstPublicationDate ;
      sh:datatype xsd:dateTime ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "first publication date" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:hasAuthor ;
      sh:class atBooks:Person ;
      sh:minCount 1 ;
      sh:name "has author" ;
      sh:nodeKind sh:IRI ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:isEnded ;
      sh:datatype xsd:boolean ;
      sh:description "Status, may be true of false" ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "is ended" ;
    ] ;
  sh:property [
      a sh:PropertyShape ;
      sh:path atBooks:publicationDate ;
      sh:datatype xsd:dateTime ;
      sh:description "Date, when text was publicated last time" ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "publication date" ;
    ] ;
.
atBooks:hasWritten
  rdfs:domain atBooks:Author ;
  rdfs:range atBooks:TextConcept ;
.
atBooks:illya
  a atBooks:Author ;
  atBooks:hasName "Petrov Oleg" ;
  rdfs:label "illya" ;
.
